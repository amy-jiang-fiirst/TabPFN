#!/usr/bin/env python3
"""
Simple web server to view generated attention visualizations.
"""

import http.server
import socketserver
import os
import webbrowser
from pathlib import Path


def create_html_gallery():
    """Create an HTML gallery of all generated visualizations."""
    
    # Find all PNG files
    png_files = list(Path('.').glob('*.png'))
    png_files.sort()
    
    html_content = """
<!DOCTYPE html>
<html>
<head>
    <title>TabPFN Attention Visualizations</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .header {
            text-align: center;
            background-color: #2c3e50;
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
        }
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 20px;
        }
        .image-card {
            background: white;
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .image-card img {
            width: 100%;
            height: auto;
            border-radius: 5px;
        }
        .image-title {
            font-weight: bold;
            margin-bottom: 10px;
            color: #2c3e50;
        }
        .summary {
            background-color: #e8f5e8;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
        }
        .feature-list {
            list-style-type: none;
            padding: 0;
        }
        .feature-list li {
            padding: 5px 0;
        }
        .feature-list li:before {
            content: "‚úÖ ";
            color: green;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üéØ TabPFN Enhanced Attention Visualizations</h1>
        <p>Complete debugging and visualization of attention maps</p>
    </div>
    
    <div class="summary">
        <h2>üéâ Successfully Implemented Features</h2>
        <ul class="feature-list">
            <li>Fixed PyTorch 2.7+ compatibility issue with scaled_dot_product_attention</li>
            <li>Layer-specific attention extraction (specify layer 0-11 or None for all)</li>
            <li>Head-specific attention extraction (specify head 0-N or None for all)</li>
            <li>Attention aggregation methods (mean or max across heads)</li>
            <li>Feature-wise attention maps with original feature names and target variables</li>
            <li>Sample-wise attention maps with sample indices and train/test indicators</li>
            <li>Comprehensive visualization classes and interactive demos</li>
        </ul>
    </div>
    
    <div class="gallery">
"""
    
    # Add each image to the gallery
    for png_file in png_files:
        # Create a readable title from filename
        title = png_file.stem.replace('_', ' ').title()
        title = title.replace('Demo ', 'Demo: ')
        title = title.replace('Enhanced ', 'Enhanced: ')
        
        html_content += f"""
        <div class="image-card">
            <div class="image-title">{title}</div>
            <img src="{png_file.name}" alt="{title}">
        </div>
"""
    
    html_content += """
    </div>
    
    <div style="margin-top: 40px; text-align: center; color: #666;">
        <p>Generated by TabPFN Enhanced Attention Visualization System</p>
        <p>See ATTENTION_VISUALIZATION_GUIDE.md for detailed documentation</p>
    </div>
</body>
</html>
"""
    
    with open('visualizations.html', 'w') as f:
        f.write(html_content)
    
    print("‚úì Created visualizations.html gallery")


def start_server(port=12000):
    """Start a simple HTTP server to view visualizations."""
    
    # Create HTML gallery
    create_html_gallery()
    
    # Start server
    handler = http.server.SimpleHTTPRequestHandler
    
    with socketserver.TCPServer(("", port), handler) as httpd:
        print(f"üåê Starting server at http://localhost:{port}")
        print(f"üìä View visualizations at: http://localhost:{port}/visualizations.html")
        print("Press Ctrl+C to stop the server")
        
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüõë Server stopped")


if __name__ == "__main__":
    start_server()